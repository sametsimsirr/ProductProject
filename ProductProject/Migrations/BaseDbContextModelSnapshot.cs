// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductProject.Repositories;

namespace ProductProject.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    partial class BaseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProductProject.Entities.Attribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryAttributeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("Created_Datetime");

                    b.Property<int?>("CreatedUser")
                        .HasColumnType("int")
                        .HasColumnName("Created_User");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int")
                        .HasColumnName("Deleted");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("ModifiedDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("Modified_Datetime");

                    b.Property<int?>("ModifiedUser")
                        .HasColumnType("int")
                        .HasColumnName("Modified_User");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("CategoryAttributeId");

                    b.ToTable("Attribute");
                });

            modelBuilder.Entity("ProductProject.Entities.CategoryAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("Created_Datetime");

                    b.Property<int?>("CreatedUser")
                        .HasColumnType("int")
                        .HasColumnName("Created_User");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int")
                        .HasColumnName("Deleted");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("ModifiedDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("Modified_Datetime");

                    b.Property<int?>("ModifiedUser")
                        .HasColumnType("int")
                        .HasColumnName("Modified_User");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int?>("ProductCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Category_Attribute");
                });

            modelBuilder.Entity("ProductProject.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("Created_Datetime");

                    b.Property<int?>("CreatedUser")
                        .HasColumnType("int")
                        .HasColumnName("Created_User");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int")
                        .HasColumnName("Deleted");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("ModifiedDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("Modified_Datetime");

                    b.Property<int?>("ModifiedUser")
                        .HasColumnType("int")
                        .HasColumnName("Modified_User");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("Price");

                    b.Property<int?>("ProductCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("Product_Category_Id");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ProductProject.Entities.ProductAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("Created_Datetime");

                    b.Property<int?>("CreatedUser")
                        .HasColumnType("int")
                        .HasColumnName("Created_User");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int")
                        .HasColumnName("Deleted");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("ModifiedDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("Modified_Datetime");

                    b.Property<int?>("ModifiedUser")
                        .HasColumnType("int")
                        .HasColumnName("Modified_User");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Product_Attribute");
                });

            modelBuilder.Entity("ProductProject.Entities.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("Created_Datetime");

                    b.Property<int?>("CreatedUser")
                        .HasColumnType("int")
                        .HasColumnName("Created_User");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int")
                        .HasColumnName("Deleted");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("ModifiedDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("Modified_Datetime");

                    b.Property<int?>("ModifiedUser")
                        .HasColumnType("int")
                        .HasColumnName("Modified_User");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Product_Category");
                });

            modelBuilder.Entity("ProductProject.Entities.Attribute", b =>
                {
                    b.HasOne("ProductProject.Entities.CategoryAttribute", null)
                        .WithMany("Attributes")
                        .HasForeignKey("CategoryAttributeId");
                });

            modelBuilder.Entity("ProductProject.Entities.CategoryAttribute", b =>
                {
                    b.HasOne("ProductProject.Entities.ProductCategory", null)
                        .WithMany("CategoryAttributes")
                        .HasForeignKey("ProductCategoryId");
                });

            modelBuilder.Entity("ProductProject.Entities.Product", b =>
                {
                    b.HasOne("ProductProject.Entities.ProductCategory", "ProductCategory")
                        .WithMany()
                        .HasForeignKey("ProductCategoryId");

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("ProductProject.Entities.ProductAttribute", b =>
                {
                    b.HasOne("ProductProject.Entities.Product", "Product")
                        .WithMany("ProductAttributes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProductProject.Entities.CategoryAttribute", b =>
                {
                    b.Navigation("Attributes");
                });

            modelBuilder.Entity("ProductProject.Entities.Product", b =>
                {
                    b.Navigation("ProductAttributes");
                });

            modelBuilder.Entity("ProductProject.Entities.ProductCategory", b =>
                {
                    b.Navigation("CategoryAttributes");
                });
#pragma warning restore 612, 618
        }
    }
}
